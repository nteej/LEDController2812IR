String str = R"HTM(
<!DOCTYPE html><html>
<head>
<style>

.bgGr  {background-color: #ccccdd;}
.bgOr  {background-color: #ffeeaa; padding-top:18px;}

.grad1 {
  height: 44px;
  background-color: red; 
  background-image: linear-gradient(to right, red, orange, yellow, green, blue, indigo, violet, red);
}

.grad2 {
	background: #ff0000;
	background: -moz-linear-gradient(right,  #ff0000 0%, #fcf535 19%, #fcf535 19%, #00ff19 36%, #38ffee 52%, #0011ff 69%, #ff00fa 85%, #ff0004 100%);
	background: -webkit-linear-gradient(right,  #ff0000 0%,#fcf535 19%,#fcf535 19%,#00ff19 36%,#38ffee 52%,#0011ff 69%,#ff00fa 85%,#ff0004 100%);
	background: linear-gradient(to right,  #ff0000 0%,#fcf535 19%,#fcf535 19%,#00ff19 36%,#38ffee 52%,#0011ff 69%,#ff00fa 85%,#ff0004 100%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff0000', endColorstr='#ff0004',GradientType=1 );
}


* {
 font-size: 18px;
 font-family: Arial;
 text-decoration: none;
}

.notImplemented
{
  color: #ff0000;
  position: absolute;
  text-align:left;
  z-index: 99;
}

html {  text-align: center; }

.abs {
  float: right;
  position: absolute;
}


.rOpt {
	padding: 8px 8px 8px 32px;
  position: fixed;
  background-color: rgba(0,0,0,0.5);/*transparent*/
  top: 0;
  right: 0;
  overflow-x: hidden;
  transition: 0.5s;
  padding-top: 60px;
}

.rOptItem a {
  padding: 8px 8px 8px 32px;
  text-decoration: none;
  font-size: 25px;
  color: #818181;
  display: block;
  transition: 0.3s;
}



.tst {
  float: left
}

.sett_item {
  margin-bottom: -3px;
  margin-right: 80px;
  padding: 10px;
}

.ib { color:#00f;}
.ir { color:#f00;}
.ix { color:#ccc;}

.settNm
{
   margin: -10px;
}


h2 {color: #55acee;}
h3 {color: #444444;}

p {display: inline ; background-color: #34eedb; color: white; padding: 6px 24px; color: #55acee;} /*227cae*/
p.odd  {padding: 6px 120px;}




a.btS {background-color: #aa55ff; padding: 4px 12px; margin: 4px 12px;}
a.btL { padding: 4px 12px; margin: 4px 12px;} /*34ffaa*/

.bt {background-color: #3498db; color: white;   padding: 15px 22px;  border-radius: 8px;}
.bt:hover {background-color: #aabb00;     cursor:pointer;}

.on {background-color: #3498db;}
.on:active {background-color: #2980b9;}

.off {background-color: #34495e;}
.off:active {background-color: #2c3e50;}

.na {color: #333333; background-color: #000000;}



.link {
  text-decoration: none;
  color: #55acee;
  border-bottom: 2px dotted #55acee;
  transition: .3s;
  -webkit-transition: .3s;
  -moz-transition: .3s;
  -o-transition: .3s;
}

.link:hover {
  color: #2ecc71;
  border-bottom: 2px dotted #2ecc71;
  
}



#buttons {
  padding-top: 50px;
  text-align: center;
}

.btn {
  border-radius: 5px;
  padding: 6px 10px;
/*  font-size: 16px;*/
  text-decoration: none;
  margin: 3px;
  color: #fff;
  position: relative;
  display: inline-block;
}

.btn:active {
  transform: translate(0px, 5px);
  -webkit-transform: translate(0px, 5px);
  box-shadow: 0px 1px 0px 0px;
}

.blue {
  background-color: #55acee;
  box-shadow: 0px 5px 0px 0px #3C93D5;
}

.blue:hover {
  background-color: #6FC6FF;
}

.green {
  background-color: #2ecc71;
  box-shadow: 0px 5px 0px 0px #15B358;
}

.green:hover {
  background-color: #48E68B;
}


.lime {
  background-color: lime;
  box-shadow: 0px 5px 0px 0px #15B358;
}

.lime:hover {
  background-color: #88E68B;
}

.brown {
  background-color: #98664B;
  box-shadow: 0px 5px 0px 0px #483622;
}

.brown:hover {
  background-color: #78864B;
}



.red {
  background-color: #e74c3c;
  box-shadow: 0px 5px 0px 0px #CE3323;
}

.red:hover {
  background-color: #FF6656;
}

.purple {
  background-color: #9b59b6;
  box-shadow: 0px 5px 0px 0px #82409D;
}

.purple:hover {
  background-color: #B573D0;
}

.orange {
  background-color: #e67e22;
  box-shadow: 0px 5px 0px 0px #CD6509;
}

.orange:hover {
  background-color: #FF983C;
}

.yellow {
  background-color: #f1c40f;
  box-shadow: 0px 5px 0px 0px #D8AB00;
}

.yellow:hover {
  background-color: #FFDE29;
}



div.scrollmenu
{
  /*background-color: #333;*/
  overflow: auto;
  white-space: nowrap;
}
.scrollmenuFlex {
  display: flex;
  /*flex-direction: column;*/
  flex-wrap: wrap;
}
div.scrollmenu a {
  display: block; /*inline-block;  for horizontal*/
  color: white;
  text-align: center;
  padding: 14px;
  text-decoration: none;
}
div.scrollmenu a:hover {
  background-color: #777;
}
.vertical-menu {
  height: 400px;
  overflow-y: auto;
}


.slider
{
	width: 100%;
	outline: none;
	opacity: 0.7;
	margin: 14px;
}
.slider:hover {
  opacity: 1;
}



.collap {
  background-color: #999;
  color: white;
  cursor: pointer;
  padding: 18px;
  width: 100%;
  border: none;
  text-align: left;
  outline: none;
  font-size: 15px;
  
   margin-top: 14px;
}
.collap_active, .collap:hover {
  background-color: #655;
}
.collap_content {
  padding: 0 18px;
  display: none;
  overflow: hidden;
  background-color: #f1f1f1;
}

												.tst {position: absolute; font-size: 10px; text-align: left;  top: 4px; left: 4px;}
</style>

<script  type="text/javascript">
var valElemContainers;
function $(id) {return document.getElementById(id);}

function updateValuesWithNewDataFromServer(nmVal_str) 
{
		var s= nmVal_str.split("=");
		/*alert(nmVal_str+ "\r\n"+ s.length+"\r\n"+s[0]+"\r\n"+s[1]+"\r\n"+String.fromCharCode(s[1]));*/
		if(s.length>1)
		{
			valElemContainers = document.getElementsByClassName("sett_item");
			 
			for(var i=0;i<valElemContainers.length;i++)
			{
				if(valElemContainers[i].getAttribute("value")!=s[0]) continue; 
											
				
				var valElem=valElemContainers[i].getElementsByTagName('i')[0];
				/*var val=String.fromCharCode(s[1]);*/
				if(s[1]!=valElem.innerText)
				{
					valElem.innerText=s[1];
					valElem.className="ir";
					
					valElemContainers[i].getElementsByClassName("slider")[0].value=s[1];
				}
				else
					valElem.className="ib";
			}
			
			upd_sett_lnk();			
				/*### TODO fill linksNames without numbers, only names in seq */
			/*if(s[0]=="effN") $("eff_nm_current").innerHTML=linksNames[s[1]];  */
		}
}

function request(url) 
{
  const xhr = new XMLHttpRequest();
  xhr.open('GET', url);
  xhr.onload = function()
 {
	if (xhr.status != 200) 
	{
		$('tst').innerHTML+="<br/>"+xhr.status;
		/*alert("returned:"+xhr + "\n"+ xhr.responseText + "\r\n"+ xhr.readyState + "\r\n"+ xhr.status);*/
	}
	/* //not need as we send all data, and have to check difference onload
	var oldActives = document.getElementsByClassName("ir");
	for (var i = 0; i < oldActives.length; i++)
	{
	  oldActives[i].className="ib";
	}
	 */ 
	var ss = xhr.responseText.split(",");
	for (var i = 0; i < ss.length; i++)
	{
		updateValuesWithNewDataFromServer(ss[i]);
	}
	$('tst').innerHTML+="<br/>"+xhr.responseText;
 };
 xhr.send();
 $('tst').innerHTML="<br/>"+url;
 
 /* test
	var tst="effN=12,effSpeed=6";
	var ss = tst.split(",");
	for (var i = 0; i < ss.length; i++)
	{
		updateValuesWithNewDataFromServer(ss[i]);
	}
	$('tst').innerHTML+=tst;
 */
}
  
  
/*! названия менятся не будут, можно сделать асоциативный массив с рус именами к этим*/
/*TODO refactor w https://www.xul.fr/javascript/associative.php */
/*TODO effQualityMark, eff geometry*/
/*this generated in PC serial GUI app btn_copy_switch_nms_click, based on switch_slot.h :*/
const linksNames =[['fillStriped',11],['fillStriped',12],['fillStripedFillRainbow',14],['fillStripedFillRainbow',15],['fillByPalette',16],['fillByPalettesBlend_moving',17],['rainbow',18],['rainbowConfetti',19],['rainbowWithGlitter',20],['rainbow_beat',21],['randomBlinkRainbow',22],['randomBlinkRainbowFade',23],['rainbow_fill_slow',28],['rainbow_fill_slow',29],['rainbow_beat',31],['rainbow_beat',32],['rainbowSegments_shift',33],['rainbowSegments_shift',34],['rainbowSegments_shift',35],['rainbowSegments_shiftSin',36],['rainbowSegments2',37],['rainbowCycle',39],['sinelon',40],['bpm',41],['juggle',42],['spawnPixel_moveAll',43],['fillFadeChangeAll',44],['fillFadeChangeAll_beat8',45],['fillFadeChangeAll_beatsin8',47],['fadeEvenUneven',48],['fadeEvenUnevenDif',49],['confetti',50],['confetti',51],['confetti_move',52],['confetti_moveRemainFirstAdd',53],['confetti_moveRemainFirstBlend',54],['confetti_moveRemainFirstBlendByPos',55],['random_burst',56],['random_color_pop',57],['randomBlink',58],['color_bounce',62],['color_bounc_HueByPos',64],['color_bounce_multiple',65],['color_bounceFADE',66],['color_bounceFADE',67],['CubeCornersLight',70],['CubeTest',71],['matrixCube2',72],['matrixCube',73],['movingBlendRGB',77],['pulse_one_color_all',87],['pulse_one_color_all_rev',88],['radiation',90],['Fire',96],['mover_lim_mark',101],['mover_lim_mark',102],['beatWave',109],['confetti2',111],['confetti2_demo',112],['dot_beat',114],['dot_beat_area',115],['fill_grad',116],['inoise8_fire',117],['inoise8_mover',118],['inoise8_pal',119],['juggle_pal',120],['matrix_pal_demo',122],['matrix_ray',123],['noise16_1',124],['noise16_2',125],['noise16_3',126],['one_sine_pal_demo',128],['palettecrossfade',129],['plasma',130],['rainbow_beat2',131],['rainbow_march',132],['rainbow_march_demo',133],['sawtooth',136],['sinelon2',138],['three_sin_demo',139],['three_sin_pal_demo',140],['two_sin_pal_demo',141],['blend_test',144],['fill_colours',148],['animationA',149],['setColors_fill',151],['setColors_fill_tstRange',152],['setCurrentPalette',153],['setCurrentPalette_Test',154],['splitModeEditor',155],['confetti_density',157],['eff_sin',158],['eff_sin',159],['eff_sin',160],['waveSmooth',161],['palette_pipette',164],['test_palettes',165],['test_gradient',166],['test_blend',167],['fill_segments_anim',175],['fill_segments_anim',176],['draw_sample',181],['soundmems_pal',201],['soundmems_noise',202],['mus_random_mov',203],['mus_random_mov',204],['soundmems_wave',205],['soundmems_wave',206],['soundmems_peak_ripple',207],['soundmems_fire',208],['mus_arduinoFFT',209],['mus_arduinoFFT',210],['mus_arduinoFFT',211],['test_easing',214],['wave_H',216],['gen_wave_H_moveAll',217],['gen_wave_H_moveAll_blinkRand',218],['gen_wave_H_v2_moveAll_blinkRand',219],['matrix_test',220],['ems_lightsALL',224],['fillStriped',225],['sinelon',227],['fillStriped',228],['fillStriped',229],['fillStriped',230],['random_len_cell_1',233],['random_len_cell_seemless',234],['fillStriped',242],['fillStriped',243],['fillStriped',244],['fillStriped',245],['nodo',247]];
const settingNms = [];

function linksGenerator (container)
{
  linksNames.forEach( function (linkName) {
    const link = document.createElement('a');
    link.className = 'btn green';
    link.innerHTML = linkName[0];
    link.addEventListener('click', function(e) { e.preventDefault();request('http://192.168.4.1/sett?effN='+linkName[1]) });
    container.appendChild(link);
  });
}

function linksGenerator_Cube_nm (container)
{
  linksNames.forEach( function (linkName) {
	if(linkName[0].indexOf('Cub')==-1) return;
    const link = document.createElement('a');
    link.className = 'btn green';
    link.innerHTML = linkName[0];
    link.addEventListener('click', function(e) { e.preventDefault();request('http://192.168.4.1/sett?effN='+linkName[1]) });
    container.appendChild(link);
  });
}

function linksGen_SL(container,sl,styl)
{
  for(var i=0;i<10;i++)
  {
    const link = document.createElement('a');
    link.className = styl;
    link.href = 'http://192.168.4.1/sett?'+sl+'='+i;
    link.innerHTML = " "+i+" "; /* ! make proper padding */
    link.addEventListener('click', function(e) { e.preventDefault();request(this.getAttribute("href"));});
    container.appendChild(link);
  }
}

function genBtnSlider(i,nm)
{
}

function setup()
{
    var setts =document.getElementsByClassName("sett_item");
	
  	for(i = 0;i < setts.length; i++)
	{
		var settNm=setts[i].getAttribute('value');

		var htm="";
		var tx=setts[i].innerText;
		var bEditable = tx!="-"; /* '-' is non editable or not implemented by now */
		if(bEditable) 
			htm+='<a class="sender item bt off" href="sett?'+settNm+'=0">-</a>';

		var c="";
		if(i%2==0) c+=" odd";
		var txNew=(tx.length<3)?settNm:tx;
		htm+='<p class="settNm '+c+'">'+txNew+' <i class="ix">?</i></p>';

		if(bEditable)
			htm+='<a class="sender item bt on" href="sett?'+settNm+'=1">+</a>';

		
		setts[i].innerHTML=htm+'<input type="range" min="0" max="255" value="20" class="slider" oninput="showSliderVal(this);sendSliderVal(this)"  onclick="sendSliderVal(this)">';
	}
  
	var as= document.getElementsByClassName('sender');
	for(i = 0;i < as.length; i++)
	{
		as[i].onclick = function(e) {
			e.preventDefault();
			var link = this.getAttribute( "href" );
			/*var str = this.innerText;*/

			request( "http://192.168.4.1/"+link);
			return false;
		};
	}
 
	linksGenerator($("effs"));
	linksGenerator_Cube_nm($("effsCube"));

	linksGen_SL($("btS"),'s', 'bt btS');
	linksGen_SL($("btL"),'l','bt btL green');
	
	toggleSliders();/* hide */
}
document.addEventListener('DOMContentLoaded', function(){setup();});


function upd_sett_lnk()
{
	var elem=$("sett_lnk");
	
	/* #DOTO associative array, TODO test upd sliders pos with actual value from server after effN change */
	var setts =document.getElementsByClassName("sett_item");
	var str="http://192.168.4.1/sett?";
  	for(i = 0;i < setts.length; i++)
	{
		var settNm=setts[i].getAttribute("value");
		var settVal=setts[i].getElementsByClassName("slider")[0].value;
		str+=settNm+"="+settVal+"&";
	}

	elem.setAttribute( "href",str );
	elem.innerHTML=str;
}

function showSliderVal(inp)
{
	/*$("tst").innerHTML=inp.value;*/
}
function sendSliderVal(inp)
{
	request('http://192.168.4.1/sett?'+inp.parentNode.getAttribute("value")+'='+inp.value);
}


  function toggleSliders()
  {
  
	var els=document.getElementsByClassName("slider");
	toggleVisibility(els);
  }
  
  function toggleVisibility(els) {

    for (var i = 0; i < els.length; i++) {
		if(els[i].style.visibility != 'hidden')  els[i].style.visibility = 'hidden';
		else      els[i].style.visibility = 'visible';
    }
  }
</script>
</head>
<body>

											<span class="tst abs" id="tst">test responce:</span>

<h2>HTML ws2812b control page <a href="#">v0.35l</a> <a href="mailto:pavel.b.kr12@gmail.com?subject=2812 and soft">pavel.b.kr12@gmail.com</a> </h2> 
Current effect: <b id="eff_nm_current"></b> settings: <a id="sett_lnk">?</a>

<div class="rOpt">
<a class="btn red sender rOptItem" href="P">Pause sending data</a><br/><br/>
<a class="btn blue rOptItem" onclick="toggleSliders()">togle sliders</a>
</div>


<button type="button" class="collap">map to matrix</button>
<div class="bgGr collap_content">
	Act like toggle switch, but now only one active. This post processing being applied after all:
 <a class="sender btn green" href="sett?effN=242">bMap_type_matrix_zigZag_h</a>
 <a class="sender btn green" href="sett?effN=243">bMap_type_matrix_spiral_cw</a>
 <a class="sender btn green" href="sett?effN=244">bMap_type_matrix_labyrinth_cw</a>
 <a class="sender btn green" href="sett?effN=245">bMap_type_mirror_half</a>
 <a class="sender btn green" href="sett?effN=246">bMap_type_history</a>
</div>

<button type="button" class="collap">other global effects</button>
<div class="bgGr collap_content">
	<hr/>

	<hr/>
</div>


<div class="bgOr">
<div class="sett_menu">
  <div value="effN" class="sett_item"> </div>
  <div value="effSpeed" class="sett_item"></div> 
  <div value="effSpeedH" class="sett_item"></div>
  <div value="effLength" class="sett_item"></div>
  <div value="effLengthH" class="sett_item"></div>
  <div value="effRGB" class="sett_item"></div>
  <div value="gColor" class="sett_item grad2">-</div>
  <div value="gColorBg" class="sett_item grad2">-</div>
  <div value="effFade" class="sett_item"></div>
  <div value="gFade" class="sett_item"></div>
  <div value="indexOrBits" class="sett_item"></div>
  <div value="gDelay" class="sett_item"></div>
  <div value="gBrightness" class="sett_item"></div>
  <div value="NUM_LEDS" class="sett_item">-</div>
</div>
</div>

<div class="bgGr">

<a class="sender btn green" href="sett?effN=10">N off</a>
<a class="sender btn green" href="sett?effN=249">N random</a>
<!--<a class="sender btn green" href="sett?effN=251">animate_to_slot1</a>-->
<a class="sender btn green" href="sett?effN=252">animate_SW</a><br/>
<a class="sender btn green" href="sett?effN=250">N random_demo_animated_SW</a>
<a class="sender btn green" href="sett?effN=253">N predefined_show_seq</a><br/>
<a class="sender btn green" href="sett?effN=254">N random_demo_fast_SW</a>
<a class="sender btn green" href="sett?effN=255">N random_demo_SW</a><br/><br/>
</div>

<div class="bgOr">
<div id="btS">
<span>save to slot :</span>
</div>
<br/>
<div id="btL">
<span>load slot:</span>
</div>
</div>

<div class="bgGr">
<br/>
<div class="scrollmenuFlex" id="effsCube"></div>
<hr/>
List contains disabled effects that leads to RUNDOM effect.
Some are buggy or not optimised to current number of leds

<div class="scrollmenu vertical-menu">
<div class="scrollmenuFlex" id="effs"></div>
</div>
</div>
<br/>

<script>
var coll = document.getElementsByClassName("collap");
var i;

for (i = 0; i < coll.length; i++) {
  coll[i].addEventListener("click", function() {
    this.classList.toggle("active");
    var content = this.nextElementSibling;
    if (content.style.display === "block") {
      content.style.display = "none";
    } else {
      content.style.display = "block";
    }
  });
}
</script>

</body></html>

)HTM";